#Sample code for finding mean, standard deviation, maximum drawdown of Bitcoin price in the period of available data from Coinmarketcap.comimport pandas as pdimport numpy as npimport matplotlib.pyplot as ppimport datetime# Get historical data of the coindirectory_path = '/Users/chuchoanh/Documents/University of Liverpool 22:23/2. Future of money/Assignments/Data/Coin prices/History/'Data = pd.read_csv(directory_path + "ADA-USD.csv")print ('--------')print('Mean and standard deviation:')print(Data.describe())# Define the trading day window of investigationwindow = 1796# Calculate the maximum drawdown in the past window days for each day in the seriesRoll_Max = Data['Adj Close'].rolling(window, min_periods=1).max()Daily_Drawdown = Data['Adj Close']/Roll_Max - 1.0# Next calculate the minimum (negative) daily drawdown in that window.# Again, use min_periods=1 if you want to allow the expanding windowMax_Daily_Drawdown = Daily_Drawdown.rolling(window, min_periods=1).min()Max_Daily_Drawdown.valuesDaily_Drawdown.plot()Max_Daily_Drawdown.plot()pp.show()print ('Daily maximum drawdown data:')print (Max_Daily_Drawdown)print("Maximum drawdown is:",100*np.min(Max_Daily_Drawdown))